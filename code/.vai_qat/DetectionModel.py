# GENETARED BY NNDCT, DO NOT EDIT!

import torch
from torch import tensor
import pytorch_nndct as py_nndct

class DetectionModel(py_nndct.nn.NndctQuantModel):
    def __init__(self):
        super(DetectionModel, self).__init__()
        self.module_0 = py_nndct.nn.Input() #DetectionModel::input_0(DetectionModel::nndct_input_0)
        self.module_1 = py_nndct.nn.quant_input() #DetectionModel::DetectionModel/QuantStub[quantstub]/17444(DetectionModel::nndct_quant_stub_1)
        self.module_2 = py_nndct.nn.Conv2d(in_channels=3, out_channels=48, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/Conv[model]/Conv[0]/Conv2d[conv]/ret.5(DetectionModel::nndct_conv2d_2)
        self.module_3 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/Conv[model]/Conv[0]/SiLU[act]/17475(DetectionModel::aten_silu__3)
        self.module_4 = py_nndct.nn.Conv2d(in_channels=48, out_channels=96, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/Conv[model]/Conv[1]/Conv2d[conv]/ret.9(DetectionModel::nndct_conv2d_4)
        self.module_5 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/Conv[model]/Conv[1]/SiLU[act]/17503(DetectionModel::aten_silu__5)
        self.module_6 = py_nndct.nn.Conv2d(in_channels=96, out_channels=96, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[2]/Conv[cv1]/Conv2d[conv]/ret.13(DetectionModel::nndct_conv2d_6)
        self.module_7 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[2]/Conv[cv1]/SiLU[act]/17531(DetectionModel::aten_silu__7)
        self.module_8 = py_nndct.nn.strided_slice() #DetectionModel::DetectionModel/C2f[model]/C2f[2]/17571(DetectionModel::nndct_strided_slice_8)
        self.module_9 = py_nndct.nn.strided_slice() #DetectionModel::DetectionModel/C2f[model]/C2f[2]/17608(DetectionModel::nndct_strided_slice_9)
        self.module_10 = py_nndct.nn.Conv2d(in_channels=48, out_channels=48, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[2]/Bottleneck[m]/ModuleList[0]/Conv[cv1]/Conv2d[conv]/ret.23(DetectionModel::nndct_conv2d_10)
        self.module_11 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[2]/Bottleneck[m]/ModuleList[0]/Conv[cv1]/SiLU[act]/17652(DetectionModel::aten_silu__11)
        self.module_12 = py_nndct.nn.Conv2d(in_channels=48, out_channels=48, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[2]/Bottleneck[m]/ModuleList[0]/Conv[cv2]/Conv2d[conv]/ret.27(DetectionModel::nndct_conv2d_12)
        self.module_13 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[2]/Bottleneck[m]/ModuleList[0]/Conv[cv2]/SiLU[act]/17680(DetectionModel::aten_silu__13)
        self.module_14 = py_nndct.nn.Add() #DetectionModel::DetectionModel/C2f[model]/C2f[2]/Bottleneck[m]/ModuleList[0]/Add[Add]/ret.31(DetectionModel::nndct_elemwise_add_14)
        self.module_15 = py_nndct.nn.Conv2d(in_channels=48, out_channels=48, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[2]/Bottleneck[m]/ModuleList[1]/Conv[cv1]/Conv2d[conv]/ret.33(DetectionModel::nndct_conv2d_15)
        self.module_16 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[2]/Bottleneck[m]/ModuleList[1]/Conv[cv1]/SiLU[act]/17711(DetectionModel::aten_silu__16)
        self.module_17 = py_nndct.nn.Conv2d(in_channels=48, out_channels=48, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[2]/Bottleneck[m]/ModuleList[1]/Conv[cv2]/Conv2d[conv]/ret.37(DetectionModel::nndct_conv2d_17)
        self.module_18 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[2]/Bottleneck[m]/ModuleList[1]/Conv[cv2]/SiLU[act]/17739(DetectionModel::aten_silu__18)
        self.module_19 = py_nndct.nn.Add() #DetectionModel::DetectionModel/C2f[model]/C2f[2]/Bottleneck[m]/ModuleList[1]/Add[Add]/ret.41(DetectionModel::nndct_elemwise_add_19)
        self.module_20 = py_nndct.nn.Cat() #DetectionModel::DetectionModel/C2f[model]/C2f[2]/Cat[cat]/ret.43(DetectionModel::nndct_concat_20)
        self.module_21 = py_nndct.nn.Conv2d(in_channels=192, out_channels=96, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[2]/Conv[cv2]/Conv2d[conv]/ret.45(DetectionModel::nndct_conv2d_21)
        self.module_22 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[2]/Conv[cv2]/SiLU[act]/17774(DetectionModel::aten_silu__22)
        self.module_23 = py_nndct.nn.Conv2d(in_channels=96, out_channels=192, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/Conv[model]/Conv[3]/Conv2d[conv]/ret.49(DetectionModel::nndct_conv2d_23)
        self.module_24 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/Conv[model]/Conv[3]/SiLU[act]/17802(DetectionModel::aten_silu__24)
        self.module_25 = py_nndct.nn.Conv2d(in_channels=192, out_channels=192, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[4]/Conv[cv1]/Conv2d[conv]/ret.53(DetectionModel::nndct_conv2d_25)
        self.module_26 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[4]/Conv[cv1]/SiLU[act]/17830(DetectionModel::aten_silu__26)
        self.module_27 = py_nndct.nn.strided_slice() #DetectionModel::DetectionModel/C2f[model]/C2f[4]/17870(DetectionModel::nndct_strided_slice_27)
        self.module_28 = py_nndct.nn.strided_slice() #DetectionModel::DetectionModel/C2f[model]/C2f[4]/17907(DetectionModel::nndct_strided_slice_28)
        self.module_29 = py_nndct.nn.Conv2d(in_channels=96, out_channels=96, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[4]/Bottleneck[m]/ModuleList[0]/Conv[cv1]/Conv2d[conv]/ret.63(DetectionModel::nndct_conv2d_29)
        self.module_30 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[4]/Bottleneck[m]/ModuleList[0]/Conv[cv1]/SiLU[act]/17951(DetectionModel::aten_silu__30)
        self.module_31 = py_nndct.nn.Conv2d(in_channels=96, out_channels=96, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[4]/Bottleneck[m]/ModuleList[0]/Conv[cv2]/Conv2d[conv]/ret.67(DetectionModel::nndct_conv2d_31)
        self.module_32 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[4]/Bottleneck[m]/ModuleList[0]/Conv[cv2]/SiLU[act]/17979(DetectionModel::aten_silu__32)
        self.module_33 = py_nndct.nn.Add() #DetectionModel::DetectionModel/C2f[model]/C2f[4]/Bottleneck[m]/ModuleList[0]/Add[Add]/ret.71(DetectionModel::nndct_elemwise_add_33)
        self.module_34 = py_nndct.nn.Conv2d(in_channels=96, out_channels=96, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[4]/Bottleneck[m]/ModuleList[1]/Conv[cv1]/Conv2d[conv]/ret.73(DetectionModel::nndct_conv2d_34)
        self.module_35 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[4]/Bottleneck[m]/ModuleList[1]/Conv[cv1]/SiLU[act]/18010(DetectionModel::aten_silu__35)
        self.module_36 = py_nndct.nn.Conv2d(in_channels=96, out_channels=96, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[4]/Bottleneck[m]/ModuleList[1]/Conv[cv2]/Conv2d[conv]/ret.77(DetectionModel::nndct_conv2d_36)
        self.module_37 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[4]/Bottleneck[m]/ModuleList[1]/Conv[cv2]/SiLU[act]/18038(DetectionModel::aten_silu__37)
        self.module_38 = py_nndct.nn.Add() #DetectionModel::DetectionModel/C2f[model]/C2f[4]/Bottleneck[m]/ModuleList[1]/Add[Add]/ret.81(DetectionModel::nndct_elemwise_add_38)
        self.module_39 = py_nndct.nn.Conv2d(in_channels=96, out_channels=96, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[4]/Bottleneck[m]/ModuleList[2]/Conv[cv1]/Conv2d[conv]/ret.83(DetectionModel::nndct_conv2d_39)
        self.module_40 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[4]/Bottleneck[m]/ModuleList[2]/Conv[cv1]/SiLU[act]/18069(DetectionModel::aten_silu__40)
        self.module_41 = py_nndct.nn.Conv2d(in_channels=96, out_channels=96, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[4]/Bottleneck[m]/ModuleList[2]/Conv[cv2]/Conv2d[conv]/ret.87(DetectionModel::nndct_conv2d_41)
        self.module_42 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[4]/Bottleneck[m]/ModuleList[2]/Conv[cv2]/SiLU[act]/18097(DetectionModel::aten_silu__42)
        self.module_43 = py_nndct.nn.Add() #DetectionModel::DetectionModel/C2f[model]/C2f[4]/Bottleneck[m]/ModuleList[2]/Add[Add]/ret.91(DetectionModel::nndct_elemwise_add_43)
        self.module_44 = py_nndct.nn.Conv2d(in_channels=96, out_channels=96, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[4]/Bottleneck[m]/ModuleList[3]/Conv[cv1]/Conv2d[conv]/ret.93(DetectionModel::nndct_conv2d_44)
        self.module_45 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[4]/Bottleneck[m]/ModuleList[3]/Conv[cv1]/SiLU[act]/18128(DetectionModel::aten_silu__45)
        self.module_46 = py_nndct.nn.Conv2d(in_channels=96, out_channels=96, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[4]/Bottleneck[m]/ModuleList[3]/Conv[cv2]/Conv2d[conv]/ret.97(DetectionModel::nndct_conv2d_46)
        self.module_47 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[4]/Bottleneck[m]/ModuleList[3]/Conv[cv2]/SiLU[act]/18156(DetectionModel::aten_silu__47)
        self.module_48 = py_nndct.nn.Add() #DetectionModel::DetectionModel/C2f[model]/C2f[4]/Bottleneck[m]/ModuleList[3]/Add[Add]/ret.101(DetectionModel::nndct_elemwise_add_48)
        self.module_49 = py_nndct.nn.Cat() #DetectionModel::DetectionModel/C2f[model]/C2f[4]/Cat[cat]/ret.103(DetectionModel::nndct_concat_49)
        self.module_50 = py_nndct.nn.Conv2d(in_channels=576, out_channels=192, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[4]/Conv[cv2]/Conv2d[conv]/ret.105(DetectionModel::nndct_conv2d_50)
        self.module_51 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[4]/Conv[cv2]/SiLU[act]/18191(DetectionModel::aten_silu__51)
        self.module_52 = py_nndct.nn.Conv2d(in_channels=192, out_channels=384, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/Conv[model]/Conv[5]/Conv2d[conv]/ret.109(DetectionModel::nndct_conv2d_52)
        self.module_53 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/Conv[model]/Conv[5]/SiLU[act]/18219(DetectionModel::aten_silu__53)
        self.module_54 = py_nndct.nn.Conv2d(in_channels=384, out_channels=384, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[6]/Conv[cv1]/Conv2d[conv]/ret.113(DetectionModel::nndct_conv2d_54)
        self.module_55 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[6]/Conv[cv1]/SiLU[act]/18247(DetectionModel::aten_silu__55)
        self.module_56 = py_nndct.nn.strided_slice() #DetectionModel::DetectionModel/C2f[model]/C2f[6]/18287(DetectionModel::nndct_strided_slice_56)
        self.module_57 = py_nndct.nn.strided_slice() #DetectionModel::DetectionModel/C2f[model]/C2f[6]/18324(DetectionModel::nndct_strided_slice_57)
        self.module_58 = py_nndct.nn.Conv2d(in_channels=192, out_channels=192, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[6]/Bottleneck[m]/ModuleList[0]/Conv[cv1]/Conv2d[conv]/ret.123(DetectionModel::nndct_conv2d_58)
        self.module_59 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[6]/Bottleneck[m]/ModuleList[0]/Conv[cv1]/SiLU[act]/18368(DetectionModel::aten_silu__59)
        self.module_60 = py_nndct.nn.Conv2d(in_channels=192, out_channels=192, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[6]/Bottleneck[m]/ModuleList[0]/Conv[cv2]/Conv2d[conv]/ret.127(DetectionModel::nndct_conv2d_60)
        self.module_61 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[6]/Bottleneck[m]/ModuleList[0]/Conv[cv2]/SiLU[act]/18396(DetectionModel::aten_silu__61)
        self.module_62 = py_nndct.nn.Add() #DetectionModel::DetectionModel/C2f[model]/C2f[6]/Bottleneck[m]/ModuleList[0]/Add[Add]/ret.131(DetectionModel::nndct_elemwise_add_62)
        self.module_63 = py_nndct.nn.Conv2d(in_channels=192, out_channels=192, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[6]/Bottleneck[m]/ModuleList[1]/Conv[cv1]/Conv2d[conv]/ret.133(DetectionModel::nndct_conv2d_63)
        self.module_64 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[6]/Bottleneck[m]/ModuleList[1]/Conv[cv1]/SiLU[act]/18427(DetectionModel::aten_silu__64)
        self.module_65 = py_nndct.nn.Conv2d(in_channels=192, out_channels=192, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[6]/Bottleneck[m]/ModuleList[1]/Conv[cv2]/Conv2d[conv]/ret.137(DetectionModel::nndct_conv2d_65)
        self.module_66 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[6]/Bottleneck[m]/ModuleList[1]/Conv[cv2]/SiLU[act]/18455(DetectionModel::aten_silu__66)
        self.module_67 = py_nndct.nn.Add() #DetectionModel::DetectionModel/C2f[model]/C2f[6]/Bottleneck[m]/ModuleList[1]/Add[Add]/ret.141(DetectionModel::nndct_elemwise_add_67)
        self.module_68 = py_nndct.nn.Conv2d(in_channels=192, out_channels=192, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[6]/Bottleneck[m]/ModuleList[2]/Conv[cv1]/Conv2d[conv]/ret.143(DetectionModel::nndct_conv2d_68)
        self.module_69 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[6]/Bottleneck[m]/ModuleList[2]/Conv[cv1]/SiLU[act]/18486(DetectionModel::aten_silu__69)
        self.module_70 = py_nndct.nn.Conv2d(in_channels=192, out_channels=192, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[6]/Bottleneck[m]/ModuleList[2]/Conv[cv2]/Conv2d[conv]/ret.147(DetectionModel::nndct_conv2d_70)
        self.module_71 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[6]/Bottleneck[m]/ModuleList[2]/Conv[cv2]/SiLU[act]/18514(DetectionModel::aten_silu__71)
        self.module_72 = py_nndct.nn.Add() #DetectionModel::DetectionModel/C2f[model]/C2f[6]/Bottleneck[m]/ModuleList[2]/Add[Add]/ret.151(DetectionModel::nndct_elemwise_add_72)
        self.module_73 = py_nndct.nn.Conv2d(in_channels=192, out_channels=192, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[6]/Bottleneck[m]/ModuleList[3]/Conv[cv1]/Conv2d[conv]/ret.153(DetectionModel::nndct_conv2d_73)
        self.module_74 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[6]/Bottleneck[m]/ModuleList[3]/Conv[cv1]/SiLU[act]/18545(DetectionModel::aten_silu__74)
        self.module_75 = py_nndct.nn.Conv2d(in_channels=192, out_channels=192, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[6]/Bottleneck[m]/ModuleList[3]/Conv[cv2]/Conv2d[conv]/ret.157(DetectionModel::nndct_conv2d_75)
        self.module_76 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[6]/Bottleneck[m]/ModuleList[3]/Conv[cv2]/SiLU[act]/18573(DetectionModel::aten_silu__76)
        self.module_77 = py_nndct.nn.Add() #DetectionModel::DetectionModel/C2f[model]/C2f[6]/Bottleneck[m]/ModuleList[3]/Add[Add]/ret.161(DetectionModel::nndct_elemwise_add_77)
        self.module_78 = py_nndct.nn.Cat() #DetectionModel::DetectionModel/C2f[model]/C2f[6]/Cat[cat]/ret.163(DetectionModel::nndct_concat_78)
        self.module_79 = py_nndct.nn.Conv2d(in_channels=1152, out_channels=384, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[6]/Conv[cv2]/Conv2d[conv]/ret.165(DetectionModel::nndct_conv2d_79)
        self.module_80 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[6]/Conv[cv2]/SiLU[act]/18608(DetectionModel::aten_silu__80)
        self.module_81 = py_nndct.nn.Conv2d(in_channels=384, out_channels=576, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/Conv[model]/Conv[7]/Conv2d[conv]/ret.169(DetectionModel::nndct_conv2d_81)
        self.module_82 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/Conv[model]/Conv[7]/SiLU[act]/18636(DetectionModel::aten_silu__82)
        self.module_83 = py_nndct.nn.Conv2d(in_channels=576, out_channels=576, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[8]/Conv[cv1]/Conv2d[conv]/ret.173(DetectionModel::nndct_conv2d_83)
        self.module_84 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[8]/Conv[cv1]/SiLU[act]/18664(DetectionModel::aten_silu__84)
        self.module_85 = py_nndct.nn.strided_slice() #DetectionModel::DetectionModel/C2f[model]/C2f[8]/18704(DetectionModel::nndct_strided_slice_85)
        self.module_86 = py_nndct.nn.strided_slice() #DetectionModel::DetectionModel/C2f[model]/C2f[8]/18741(DetectionModel::nndct_strided_slice_86)
        self.module_87 = py_nndct.nn.Conv2d(in_channels=288, out_channels=288, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[8]/Bottleneck[m]/ModuleList[0]/Conv[cv1]/Conv2d[conv]/ret.183(DetectionModel::nndct_conv2d_87)
        self.module_88 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[8]/Bottleneck[m]/ModuleList[0]/Conv[cv1]/SiLU[act]/18785(DetectionModel::aten_silu__88)
        self.module_89 = py_nndct.nn.Conv2d(in_channels=288, out_channels=288, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[8]/Bottleneck[m]/ModuleList[0]/Conv[cv2]/Conv2d[conv]/ret.187(DetectionModel::nndct_conv2d_89)
        self.module_90 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[8]/Bottleneck[m]/ModuleList[0]/Conv[cv2]/SiLU[act]/18813(DetectionModel::aten_silu__90)
        self.module_91 = py_nndct.nn.Add() #DetectionModel::DetectionModel/C2f[model]/C2f[8]/Bottleneck[m]/ModuleList[0]/Add[Add]/ret.191(DetectionModel::nndct_elemwise_add_91)
        self.module_92 = py_nndct.nn.Conv2d(in_channels=288, out_channels=288, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[8]/Bottleneck[m]/ModuleList[1]/Conv[cv1]/Conv2d[conv]/ret.193(DetectionModel::nndct_conv2d_92)
        self.module_93 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[8]/Bottleneck[m]/ModuleList[1]/Conv[cv1]/SiLU[act]/18844(DetectionModel::aten_silu__93)
        self.module_94 = py_nndct.nn.Conv2d(in_channels=288, out_channels=288, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[8]/Bottleneck[m]/ModuleList[1]/Conv[cv2]/Conv2d[conv]/ret.197(DetectionModel::nndct_conv2d_94)
        self.module_95 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[8]/Bottleneck[m]/ModuleList[1]/Conv[cv2]/SiLU[act]/18872(DetectionModel::aten_silu__95)
        self.module_96 = py_nndct.nn.Add() #DetectionModel::DetectionModel/C2f[model]/C2f[8]/Bottleneck[m]/ModuleList[1]/Add[Add]/ret.201(DetectionModel::nndct_elemwise_add_96)
        self.module_97 = py_nndct.nn.Cat() #DetectionModel::DetectionModel/C2f[model]/C2f[8]/Cat[cat]/ret.203(DetectionModel::nndct_concat_97)
        self.module_98 = py_nndct.nn.Conv2d(in_channels=1152, out_channels=576, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[8]/Conv[cv2]/Conv2d[conv]/ret.205(DetectionModel::nndct_conv2d_98)
        self.module_99 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[8]/Conv[cv2]/SiLU[act]/18907(DetectionModel::aten_silu__99)
        self.module_100 = py_nndct.nn.Conv2d(in_channels=576, out_channels=288, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/SPPF[model]/SPPF[9]/Conv[cv1]/Conv2d[conv]/ret.209(DetectionModel::nndct_conv2d_100)
        self.module_101 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/SPPF[model]/SPPF[9]/Conv[cv1]/SiLU[act]/18935(DetectionModel::aten_silu__101)
        self.module_102 = py_nndct.nn.MaxPool2d(kernel_size=[5, 5], stride=[1, 1], padding=[2, 2], dilation=[1, 1], ceil_mode=False) #DetectionModel::DetectionModel/SPPF[model]/SPPF[9]/MaxPool2d[m1]/18950(DetectionModel::nndct_maxpool_102)
        self.module_103 = py_nndct.nn.MaxPool2d(kernel_size=[5, 5], stride=[1, 1], padding=[2, 2], dilation=[1, 1], ceil_mode=False) #DetectionModel::DetectionModel/SPPF[model]/SPPF[9]/MaxPool2d[m2]/18966(DetectionModel::nndct_maxpool_103)
        self.module_104 = py_nndct.nn.MaxPool2d(kernel_size=[5, 5], stride=[1, 1], padding=[2, 2], dilation=[1, 1], ceil_mode=False) #DetectionModel::DetectionModel/SPPF[model]/SPPF[9]/MaxPool2d[m3]/18982(DetectionModel::nndct_maxpool_104)
        self.module_105 = py_nndct.nn.Cat() #DetectionModel::DetectionModel/SPPF[model]/SPPF[9]/Cat[cat]/ret.213(DetectionModel::nndct_concat_105)
        self.module_106 = py_nndct.nn.Conv2d(in_channels=1152, out_channels=576, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/SPPF[model]/SPPF[9]/Conv[cv2]/Conv2d[conv]/ret.215(DetectionModel::nndct_conv2d_106)
        self.module_107 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/SPPF[model]/SPPF[9]/Conv[cv2]/SiLU[act]/19015(DetectionModel::aten_silu__107)
        self.module_108 = py_nndct.nn.Interpolate() #DetectionModel::DetectionModel/Upsample[model]/Upsample[10]/ret.219(DetectionModel::nndct_resize_108)
        self.module_109 = py_nndct.nn.Cat() #DetectionModel::DetectionModel/Concat[model]/Concat[11]/Cat[cat]/ret.221(DetectionModel::nndct_concat_109)
        self.module_110 = py_nndct.nn.Conv2d(in_channels=960, out_channels=384, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[12]/Conv[cv1]/Conv2d[conv]/ret.223(DetectionModel::nndct_conv2d_110)
        self.module_111 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[12]/Conv[cv1]/SiLU[act]/19053(DetectionModel::aten_silu__111)
        self.module_112 = py_nndct.nn.strided_slice() #DetectionModel::DetectionModel/C2f[model]/C2f[12]/19093(DetectionModel::nndct_strided_slice_112)
        self.module_113 = py_nndct.nn.strided_slice() #DetectionModel::DetectionModel/C2f[model]/C2f[12]/19130(DetectionModel::nndct_strided_slice_113)
        self.module_114 = py_nndct.nn.Conv2d(in_channels=192, out_channels=192, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[12]/Bottleneck[m]/ModuleList[0]/Conv[cv1]/Conv2d[conv]/ret.233(DetectionModel::nndct_conv2d_114)
        self.module_115 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[12]/Bottleneck[m]/ModuleList[0]/Conv[cv1]/SiLU[act]/19174(DetectionModel::aten_silu__115)
        self.module_116 = py_nndct.nn.Conv2d(in_channels=192, out_channels=192, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[12]/Bottleneck[m]/ModuleList[0]/Conv[cv2]/Conv2d[conv]/ret.237(DetectionModel::nndct_conv2d_116)
        self.module_117 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[12]/Bottleneck[m]/ModuleList[0]/Conv[cv2]/SiLU[act]/19202(DetectionModel::aten_silu__117)
        self.module_118 = py_nndct.nn.Conv2d(in_channels=192, out_channels=192, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[12]/Bottleneck[m]/ModuleList[1]/Conv[cv1]/Conv2d[conv]/ret.241(DetectionModel::nndct_conv2d_118)
        self.module_119 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[12]/Bottleneck[m]/ModuleList[1]/Conv[cv1]/SiLU[act]/19230(DetectionModel::aten_silu__119)
        self.module_120 = py_nndct.nn.Conv2d(in_channels=192, out_channels=192, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[12]/Bottleneck[m]/ModuleList[1]/Conv[cv2]/Conv2d[conv]/ret.245(DetectionModel::nndct_conv2d_120)
        self.module_121 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[12]/Bottleneck[m]/ModuleList[1]/Conv[cv2]/SiLU[act]/19258(DetectionModel::aten_silu__121)
        self.module_122 = py_nndct.nn.Cat() #DetectionModel::DetectionModel/C2f[model]/C2f[12]/Cat[cat]/ret.249(DetectionModel::nndct_concat_122)
        self.module_123 = py_nndct.nn.Conv2d(in_channels=768, out_channels=384, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[12]/Conv[cv2]/Conv2d[conv]/ret.251(DetectionModel::nndct_conv2d_123)
        self.module_124 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[12]/Conv[cv2]/SiLU[act]/19290(DetectionModel::aten_silu__124)
        self.module_125 = py_nndct.nn.Interpolate() #DetectionModel::DetectionModel/Upsample[model]/Upsample[13]/ret.255(DetectionModel::nndct_resize_125)
        self.module_126 = py_nndct.nn.Cat() #DetectionModel::DetectionModel/Concat[model]/Concat[14]/Cat[cat]/ret.257(DetectionModel::nndct_concat_126)
        self.module_127 = py_nndct.nn.Conv2d(in_channels=576, out_channels=192, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[15]/Conv[cv1]/Conv2d[conv]/ret.259(DetectionModel::nndct_conv2d_127)
        self.module_128 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[15]/Conv[cv1]/SiLU[act]/19328(DetectionModel::aten_silu__128)
        self.module_129 = py_nndct.nn.strided_slice() #DetectionModel::DetectionModel/C2f[model]/C2f[15]/19368(DetectionModel::nndct_strided_slice_129)
        self.module_130 = py_nndct.nn.strided_slice() #DetectionModel::DetectionModel/C2f[model]/C2f[15]/19405(DetectionModel::nndct_strided_slice_130)
        self.module_131 = py_nndct.nn.Conv2d(in_channels=96, out_channels=96, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[15]/Bottleneck[m]/ModuleList[0]/Conv[cv1]/Conv2d[conv]/ret.269(DetectionModel::nndct_conv2d_131)
        self.module_132 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[15]/Bottleneck[m]/ModuleList[0]/Conv[cv1]/SiLU[act]/19449(DetectionModel::aten_silu__132)
        self.module_133 = py_nndct.nn.Conv2d(in_channels=96, out_channels=96, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[15]/Bottleneck[m]/ModuleList[0]/Conv[cv2]/Conv2d[conv]/ret.273(DetectionModel::nndct_conv2d_133)
        self.module_134 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[15]/Bottleneck[m]/ModuleList[0]/Conv[cv2]/SiLU[act]/19477(DetectionModel::aten_silu__134)
        self.module_135 = py_nndct.nn.Conv2d(in_channels=96, out_channels=96, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[15]/Bottleneck[m]/ModuleList[1]/Conv[cv1]/Conv2d[conv]/ret.277(DetectionModel::nndct_conv2d_135)
        self.module_136 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[15]/Bottleneck[m]/ModuleList[1]/Conv[cv1]/SiLU[act]/19505(DetectionModel::aten_silu__136)
        self.module_137 = py_nndct.nn.Conv2d(in_channels=96, out_channels=96, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[15]/Bottleneck[m]/ModuleList[1]/Conv[cv2]/Conv2d[conv]/ret.281(DetectionModel::nndct_conv2d_137)
        self.module_138 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[15]/Bottleneck[m]/ModuleList[1]/Conv[cv2]/SiLU[act]/19533(DetectionModel::aten_silu__138)
        self.module_139 = py_nndct.nn.Cat() #DetectionModel::DetectionModel/C2f[model]/C2f[15]/Cat[cat]/ret.285(DetectionModel::nndct_concat_139)
        self.module_140 = py_nndct.nn.Conv2d(in_channels=384, out_channels=192, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[15]/Conv[cv2]/Conv2d[conv]/ret.287(DetectionModel::nndct_conv2d_140)
        self.module_141 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[15]/Conv[cv2]/SiLU[act]/19565(DetectionModel::aten_silu__141)
        self.module_142 = py_nndct.nn.Conv2d(in_channels=192, out_channels=192, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/Conv[model]/Conv[16]/Conv2d[conv]/ret.291(DetectionModel::nndct_conv2d_142)
        self.module_143 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/Conv[model]/Conv[16]/SiLU[act]/19593(DetectionModel::aten_silu__143)
        self.module_144 = py_nndct.nn.Cat() #DetectionModel::DetectionModel/Concat[model]/Concat[17]/Cat[cat]/ret.295(DetectionModel::nndct_concat_144)
        self.module_145 = py_nndct.nn.Conv2d(in_channels=576, out_channels=384, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[18]/Conv[cv1]/Conv2d[conv]/ret.297(DetectionModel::nndct_conv2d_145)
        self.module_146 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[18]/Conv[cv1]/SiLU[act]/19625(DetectionModel::aten_silu__146)
        self.module_147 = py_nndct.nn.strided_slice() #DetectionModel::DetectionModel/C2f[model]/C2f[18]/19665(DetectionModel::nndct_strided_slice_147)
        self.module_148 = py_nndct.nn.strided_slice() #DetectionModel::DetectionModel/C2f[model]/C2f[18]/19702(DetectionModel::nndct_strided_slice_148)
        self.module_149 = py_nndct.nn.Conv2d(in_channels=192, out_channels=192, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[18]/Bottleneck[m]/ModuleList[0]/Conv[cv1]/Conv2d[conv]/ret.307(DetectionModel::nndct_conv2d_149)
        self.module_150 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[18]/Bottleneck[m]/ModuleList[0]/Conv[cv1]/SiLU[act]/19746(DetectionModel::aten_silu__150)
        self.module_151 = py_nndct.nn.Conv2d(in_channels=192, out_channels=192, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[18]/Bottleneck[m]/ModuleList[0]/Conv[cv2]/Conv2d[conv]/ret.311(DetectionModel::nndct_conv2d_151)
        self.module_152 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[18]/Bottleneck[m]/ModuleList[0]/Conv[cv2]/SiLU[act]/19774(DetectionModel::aten_silu__152)
        self.module_153 = py_nndct.nn.Conv2d(in_channels=192, out_channels=192, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[18]/Bottleneck[m]/ModuleList[1]/Conv[cv1]/Conv2d[conv]/ret.315(DetectionModel::nndct_conv2d_153)
        self.module_154 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[18]/Bottleneck[m]/ModuleList[1]/Conv[cv1]/SiLU[act]/19802(DetectionModel::aten_silu__154)
        self.module_155 = py_nndct.nn.Conv2d(in_channels=192, out_channels=192, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[18]/Bottleneck[m]/ModuleList[1]/Conv[cv2]/Conv2d[conv]/ret.319(DetectionModel::nndct_conv2d_155)
        self.module_156 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[18]/Bottleneck[m]/ModuleList[1]/Conv[cv2]/SiLU[act]/19830(DetectionModel::aten_silu__156)
        self.module_157 = py_nndct.nn.Cat() #DetectionModel::DetectionModel/C2f[model]/C2f[18]/Cat[cat]/ret.323(DetectionModel::nndct_concat_157)
        self.module_158 = py_nndct.nn.Conv2d(in_channels=768, out_channels=384, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[18]/Conv[cv2]/Conv2d[conv]/ret.325(DetectionModel::nndct_conv2d_158)
        self.module_159 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[18]/Conv[cv2]/SiLU[act]/19862(DetectionModel::aten_silu__159)
        self.module_160 = py_nndct.nn.Conv2d(in_channels=384, out_channels=384, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/Conv[model]/Conv[19]/Conv2d[conv]/ret.329(DetectionModel::nndct_conv2d_160)
        self.module_161 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/Conv[model]/Conv[19]/SiLU[act]/19890(DetectionModel::aten_silu__161)
        self.module_162 = py_nndct.nn.Cat() #DetectionModel::DetectionModel/Concat[model]/Concat[20]/Cat[cat]/ret.333(DetectionModel::nndct_concat_162)
        self.module_163 = py_nndct.nn.Conv2d(in_channels=960, out_channels=576, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[21]/Conv[cv1]/Conv2d[conv]/ret.335(DetectionModel::nndct_conv2d_163)
        self.module_164 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[21]/Conv[cv1]/SiLU[act]/19922(DetectionModel::aten_silu__164)
        self.module_165 = py_nndct.nn.strided_slice() #DetectionModel::DetectionModel/C2f[model]/C2f[21]/19962(DetectionModel::nndct_strided_slice_165)
        self.module_166 = py_nndct.nn.strided_slice() #DetectionModel::DetectionModel/C2f[model]/C2f[21]/19999(DetectionModel::nndct_strided_slice_166)
        self.module_167 = py_nndct.nn.Conv2d(in_channels=288, out_channels=288, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[21]/Bottleneck[m]/ModuleList[0]/Conv[cv1]/Conv2d[conv]/ret.345(DetectionModel::nndct_conv2d_167)
        self.module_168 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[21]/Bottleneck[m]/ModuleList[0]/Conv[cv1]/SiLU[act]/20043(DetectionModel::aten_silu__168)
        self.module_169 = py_nndct.nn.Conv2d(in_channels=288, out_channels=288, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[21]/Bottleneck[m]/ModuleList[0]/Conv[cv2]/Conv2d[conv]/ret.349(DetectionModel::nndct_conv2d_169)
        self.module_170 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[21]/Bottleneck[m]/ModuleList[0]/Conv[cv2]/SiLU[act]/20071(DetectionModel::aten_silu__170)
        self.module_171 = py_nndct.nn.Conv2d(in_channels=288, out_channels=288, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[21]/Bottleneck[m]/ModuleList[1]/Conv[cv1]/Conv2d[conv]/ret.353(DetectionModel::nndct_conv2d_171)
        self.module_172 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[21]/Bottleneck[m]/ModuleList[1]/Conv[cv1]/SiLU[act]/20099(DetectionModel::aten_silu__172)
        self.module_173 = py_nndct.nn.Conv2d(in_channels=288, out_channels=288, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[21]/Bottleneck[m]/ModuleList[1]/Conv[cv2]/Conv2d[conv]/ret.357(DetectionModel::nndct_conv2d_173)
        self.module_174 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[21]/Bottleneck[m]/ModuleList[1]/Conv[cv2]/SiLU[act]/20127(DetectionModel::aten_silu__174)
        self.module_175 = py_nndct.nn.Cat() #DetectionModel::DetectionModel/C2f[model]/C2f[21]/Cat[cat]/ret.361(DetectionModel::nndct_concat_175)
        self.module_176 = py_nndct.nn.Conv2d(in_channels=1152, out_channels=576, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/C2f[model]/C2f[21]/Conv[cv2]/Conv2d[conv]/ret.363(DetectionModel::nndct_conv2d_176)
        self.module_177 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/C2f[model]/C2f[21]/Conv[cv2]/SiLU[act]/20159(DetectionModel::aten_silu__177)
        self.module_178 = py_nndct.nn.Conv2d(in_channels=192, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv2]/ModuleList[0]/Conv[0]/Conv2d[conv]/ret.367(DetectionModel::nndct_conv2d_178)
        self.module_179 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv2]/ModuleList[0]/Conv[0]/SiLU[act]/20187(DetectionModel::aten_silu__179)
        self.module_180 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv2]/ModuleList[0]/Conv[1]/Conv2d[conv]/ret.371(DetectionModel::nndct_conv2d_180)
        self.module_181 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv2]/ModuleList[0]/Conv[1]/SiLU[act]/20215(DetectionModel::aten_silu__181)
        self.module_182 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv2]/ModuleList[0]/Conv2d[2]/ret.375(DetectionModel::nndct_conv2d_182)
        self.module_183 = py_nndct.nn.Conv2d(in_channels=192, out_channels=192, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv3]/ModuleList[0]/Conv[0]/Conv2d[conv]/ret.377(DetectionModel::nndct_conv2d_183)
        self.module_184 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv3]/ModuleList[0]/Conv[0]/SiLU[act]/20263(DetectionModel::aten_silu__184)
        self.module_185 = py_nndct.nn.Conv2d(in_channels=192, out_channels=192, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv3]/ModuleList[0]/Conv[1]/Conv2d[conv]/ret.381(DetectionModel::nndct_conv2d_185)
        self.module_186 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv3]/ModuleList[0]/Conv[1]/SiLU[act]/20291(DetectionModel::aten_silu__186)
        self.module_187 = py_nndct.nn.Conv2d(in_channels=192, out_channels=80, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv3]/ModuleList[0]/Conv2d[2]/ret.385(DetectionModel::nndct_conv2d_187)
        self.module_188 = py_nndct.nn.Cat() #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Cat[n0_cat]/ret.387(DetectionModel::nndct_concat_188)
        self.module_189 = py_nndct.nn.Conv2d(in_channels=384, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv2]/ModuleList[1]/Conv[0]/Conv2d[conv]/ret.389(DetectionModel::nndct_conv2d_189)
        self.module_190 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv2]/ModuleList[1]/Conv[0]/SiLU[act]/20343(DetectionModel::aten_silu__190)
        self.module_191 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv2]/ModuleList[1]/Conv[1]/Conv2d[conv]/ret.393(DetectionModel::nndct_conv2d_191)
        self.module_192 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv2]/ModuleList[1]/Conv[1]/SiLU[act]/20371(DetectionModel::aten_silu__192)
        self.module_193 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv2]/ModuleList[1]/Conv2d[2]/ret.397(DetectionModel::nndct_conv2d_193)
        self.module_194 = py_nndct.nn.Conv2d(in_channels=384, out_channels=192, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv3]/ModuleList[1]/Conv[0]/Conv2d[conv]/ret.399(DetectionModel::nndct_conv2d_194)
        self.module_195 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv3]/ModuleList[1]/Conv[0]/SiLU[act]/20419(DetectionModel::aten_silu__195)
        self.module_196 = py_nndct.nn.Conv2d(in_channels=192, out_channels=192, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv3]/ModuleList[1]/Conv[1]/Conv2d[conv]/ret.403(DetectionModel::nndct_conv2d_196)
        self.module_197 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv3]/ModuleList[1]/Conv[1]/SiLU[act]/20447(DetectionModel::aten_silu__197)
        self.module_198 = py_nndct.nn.Conv2d(in_channels=192, out_channels=80, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv3]/ModuleList[1]/Conv2d[2]/ret.407(DetectionModel::nndct_conv2d_198)
        self.module_199 = py_nndct.nn.Cat() #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Cat[n1_cat]/ret.409(DetectionModel::nndct_concat_199)
        self.module_200 = py_nndct.nn.Conv2d(in_channels=576, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv2]/ModuleList[2]/Conv[0]/Conv2d[conv]/ret.411(DetectionModel::nndct_conv2d_200)
        self.module_201 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv2]/ModuleList[2]/Conv[0]/SiLU[act]/20499(DetectionModel::aten_silu__201)
        self.module_202 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv2]/ModuleList[2]/Conv[1]/Conv2d[conv]/ret.415(DetectionModel::nndct_conv2d_202)
        self.module_203 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv2]/ModuleList[2]/Conv[1]/SiLU[act]/20527(DetectionModel::aten_silu__203)
        self.module_204 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv2]/ModuleList[2]/Conv2d[2]/ret.419(DetectionModel::nndct_conv2d_204)
        self.module_205 = py_nndct.nn.Conv2d(in_channels=576, out_channels=192, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv3]/ModuleList[2]/Conv[0]/Conv2d[conv]/ret.421(DetectionModel::nndct_conv2d_205)
        self.module_206 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv3]/ModuleList[2]/Conv[0]/SiLU[act]/20575(DetectionModel::aten_silu__206)
        self.module_207 = py_nndct.nn.Conv2d(in_channels=192, out_channels=192, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv3]/ModuleList[2]/Conv[1]/Conv2d[conv]/ret.425(DetectionModel::nndct_conv2d_207)
        self.module_208 = py_nndct.nn.Module('aten::silu_') #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv3]/ModuleList[2]/Conv[1]/SiLU[act]/20603(DetectionModel::aten_silu__208)
        self.module_209 = py_nndct.nn.Conv2d(in_channels=192, out_channels=80, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Sequential[cv3]/ModuleList[2]/Conv2d[2]/ret.429(DetectionModel::nndct_conv2d_209)
        self.module_210 = py_nndct.nn.Cat() #DetectionModel::DetectionModel/Detect[model]/Detect[22]/Cat[n2_cat]/ret.431(DetectionModel::nndct_concat_210)
        self.module_211 = py_nndct.nn.dequant_output() #DetectionModel::DetectionModel/DeQuantStub[dequantstub]/20632(DetectionModel::nndct_dequant_stub_211)
        self.module_212 = py_nndct.nn.dequant_output() #DetectionModel::DetectionModel/DeQuantStub[dequantstub]/20636(DetectionModel::nndct_dequant_stub_212)
        self.module_213 = py_nndct.nn.dequant_output() #DetectionModel::DetectionModel/DeQuantStub[dequantstub]/20640(DetectionModel::nndct_dequant_stub_213)

    @py_nndct.nn.forward_processor
    def forward(self, *args):
        output_module_0 = self.module_0(input=args[0])
        output_module_0 = self.module_1(input=output_module_0)
        output_module_0 = self.module_2(output_module_0)
        output_module_0 = self.module_3({'self': output_module_0})
        output_module_0 = self.module_4(output_module_0)
        output_module_0 = self.module_5({'self': output_module_0})
        output_module_0 = self.module_6(output_module_0)
        output_module_0 = self.module_7({'self': output_module_0})
        output_module_8 = self.module_8(input=output_module_0, dim=[0,1,2,3], start=[0,0,0,0], end=[9223372036854775807,48,9223372036854775807,9223372036854775807], step=[1,1,1,1])
        output_module_9 = self.module_9(input=output_module_0, dim=[0,1,2,3], start=[0,48,0,0], end=[9223372036854775807,96,9223372036854775807,9223372036854775807], step=[1,1,1,1])
        output_module_10 = self.module_10(output_module_9)
        output_module_10 = self.module_11({'self': output_module_10})
        output_module_10 = self.module_12(output_module_10)
        output_module_10 = self.module_13({'self': output_module_10})
        output_module_14 = self.module_14(input=output_module_9, other=output_module_10, alpha=1)
        output_module_15 = self.module_15(output_module_14)
        output_module_15 = self.module_16({'self': output_module_15})
        output_module_15 = self.module_17(output_module_15)
        output_module_15 = self.module_18({'self': output_module_15})
        output_module_19 = self.module_19(input=output_module_14, other=output_module_15, alpha=1)
        output_module_8 = self.module_20(dim=1, tensors=[output_module_8,output_module_9,output_module_14,output_module_19])
        output_module_8 = self.module_21(output_module_8)
        output_module_8 = self.module_22({'self': output_module_8})
        output_module_8 = self.module_23(output_module_8)
        output_module_8 = self.module_24({'self': output_module_8})
        output_module_8 = self.module_25(output_module_8)
        output_module_8 = self.module_26({'self': output_module_8})
        output_module_27 = self.module_27(input=output_module_8, dim=[0,1,2,3], start=[0,0,0,0], end=[9223372036854775807,96,9223372036854775807,9223372036854775807], step=[1,1,1,1])
        output_module_28 = self.module_28(input=output_module_8, dim=[0,1,2,3], start=[0,96,0,0], end=[9223372036854775807,192,9223372036854775807,9223372036854775807], step=[1,1,1,1])
        output_module_29 = self.module_29(output_module_28)
        output_module_29 = self.module_30({'self': output_module_29})
        output_module_29 = self.module_31(output_module_29)
        output_module_29 = self.module_32({'self': output_module_29})
        output_module_33 = self.module_33(input=output_module_28, other=output_module_29, alpha=1)
        output_module_34 = self.module_34(output_module_33)
        output_module_34 = self.module_35({'self': output_module_34})
        output_module_34 = self.module_36(output_module_34)
        output_module_34 = self.module_37({'self': output_module_34})
        output_module_38 = self.module_38(input=output_module_33, other=output_module_34, alpha=1)
        output_module_39 = self.module_39(output_module_38)
        output_module_39 = self.module_40({'self': output_module_39})
        output_module_39 = self.module_41(output_module_39)
        output_module_39 = self.module_42({'self': output_module_39})
        output_module_43 = self.module_43(input=output_module_38, other=output_module_39, alpha=1)
        output_module_44 = self.module_44(output_module_43)
        output_module_44 = self.module_45({'self': output_module_44})
        output_module_44 = self.module_46(output_module_44)
        output_module_44 = self.module_47({'self': output_module_44})
        output_module_48 = self.module_48(input=output_module_43, other=output_module_44, alpha=1)
        output_module_27 = self.module_49(dim=1, tensors=[output_module_27,output_module_28,output_module_33,output_module_38,output_module_43,output_module_48])
        output_module_27 = self.module_50(output_module_27)
        output_module_27 = self.module_51({'self': output_module_27})
        output_module_52 = self.module_52(output_module_27)
        output_module_52 = self.module_53({'self': output_module_52})
        output_module_52 = self.module_54(output_module_52)
        output_module_52 = self.module_55({'self': output_module_52})
        output_module_56 = self.module_56(input=output_module_52, dim=[0,1,2,3], start=[0,0,0,0], end=[9223372036854775807,192,9223372036854775807,9223372036854775807], step=[1,1,1,1])
        output_module_57 = self.module_57(input=output_module_52, dim=[0,1,2,3], start=[0,192,0,0], end=[9223372036854775807,384,9223372036854775807,9223372036854775807], step=[1,1,1,1])
        output_module_58 = self.module_58(output_module_57)
        output_module_58 = self.module_59({'self': output_module_58})
        output_module_58 = self.module_60(output_module_58)
        output_module_58 = self.module_61({'self': output_module_58})
        output_module_62 = self.module_62(input=output_module_57, other=output_module_58, alpha=1)
        output_module_63 = self.module_63(output_module_62)
        output_module_63 = self.module_64({'self': output_module_63})
        output_module_63 = self.module_65(output_module_63)
        output_module_63 = self.module_66({'self': output_module_63})
        output_module_67 = self.module_67(input=output_module_62, other=output_module_63, alpha=1)
        output_module_68 = self.module_68(output_module_67)
        output_module_68 = self.module_69({'self': output_module_68})
        output_module_68 = self.module_70(output_module_68)
        output_module_68 = self.module_71({'self': output_module_68})
        output_module_72 = self.module_72(input=output_module_67, other=output_module_68, alpha=1)
        output_module_73 = self.module_73(output_module_72)
        output_module_73 = self.module_74({'self': output_module_73})
        output_module_73 = self.module_75(output_module_73)
        output_module_73 = self.module_76({'self': output_module_73})
        output_module_77 = self.module_77(input=output_module_72, other=output_module_73, alpha=1)
        output_module_56 = self.module_78(dim=1, tensors=[output_module_56,output_module_57,output_module_62,output_module_67,output_module_72,output_module_77])
        output_module_56 = self.module_79(output_module_56)
        output_module_56 = self.module_80({'self': output_module_56})
        output_module_81 = self.module_81(output_module_56)
        output_module_81 = self.module_82({'self': output_module_81})
        output_module_81 = self.module_83(output_module_81)
        output_module_81 = self.module_84({'self': output_module_81})
        output_module_85 = self.module_85(input=output_module_81, dim=[0,1,2,3], start=[0,0,0,0], end=[9223372036854775807,288,9223372036854775807,9223372036854775807], step=[1,1,1,1])
        output_module_86 = self.module_86(input=output_module_81, dim=[0,1,2,3], start=[0,288,0,0], end=[9223372036854775807,576,9223372036854775807,9223372036854775807], step=[1,1,1,1])
        output_module_87 = self.module_87(output_module_86)
        output_module_87 = self.module_88({'self': output_module_87})
        output_module_87 = self.module_89(output_module_87)
        output_module_87 = self.module_90({'self': output_module_87})
        output_module_91 = self.module_91(input=output_module_86, other=output_module_87, alpha=1)
        output_module_92 = self.module_92(output_module_91)
        output_module_92 = self.module_93({'self': output_module_92})
        output_module_92 = self.module_94(output_module_92)
        output_module_92 = self.module_95({'self': output_module_92})
        output_module_96 = self.module_96(input=output_module_91, other=output_module_92, alpha=1)
        output_module_85 = self.module_97(dim=1, tensors=[output_module_85,output_module_86,output_module_91,output_module_96])
        output_module_85 = self.module_98(output_module_85)
        output_module_85 = self.module_99({'self': output_module_85})
        output_module_85 = self.module_100(output_module_85)
        output_module_85 = self.module_101({'self': output_module_85})
        output_module_102 = self.module_102(output_module_85)
        output_module_103 = self.module_103(output_module_102)
        output_module_104 = self.module_104(output_module_103)
        output_module_105 = self.module_105(dim=1, tensors=[output_module_85,output_module_102,output_module_103,output_module_104])
        output_module_105 = self.module_106(output_module_105)
        output_module_105 = self.module_107({'self': output_module_105})
        output_module_108 = self.module_108(input=output_module_105, size=None, scale_factor=[2.0,2.0], mode='nearest')
        output_module_108 = self.module_109(dim=1, tensors=[output_module_108,output_module_56])
        output_module_108 = self.module_110(output_module_108)
        output_module_108 = self.module_111({'self': output_module_108})
        output_module_112 = self.module_112(input=output_module_108, dim=[0,1,2,3], start=[0,0,0,0], end=[9223372036854775807,192,9223372036854775807,9223372036854775807], step=[1,1,1,1])
        output_module_113 = self.module_113(input=output_module_108, dim=[0,1,2,3], start=[0,192,0,0], end=[9223372036854775807,384,9223372036854775807,9223372036854775807], step=[1,1,1,1])
        output_module_114 = self.module_114(output_module_113)
        output_module_114 = self.module_115({'self': output_module_114})
        output_module_114 = self.module_116(output_module_114)
        output_module_114 = self.module_117({'self': output_module_114})
        output_module_118 = self.module_118(output_module_114)
        output_module_118 = self.module_119({'self': output_module_118})
        output_module_118 = self.module_120(output_module_118)
        output_module_118 = self.module_121({'self': output_module_118})
        output_module_112 = self.module_122(dim=1, tensors=[output_module_112,output_module_113,output_module_114,output_module_118])
        output_module_112 = self.module_123(output_module_112)
        output_module_112 = self.module_124({'self': output_module_112})
        output_module_125 = self.module_125(input=output_module_112, size=None, scale_factor=[2.0,2.0], mode='nearest')
        output_module_125 = self.module_126(dim=1, tensors=[output_module_125,output_module_27])
        output_module_125 = self.module_127(output_module_125)
        output_module_125 = self.module_128({'self': output_module_125})
        output_module_129 = self.module_129(input=output_module_125, dim=[0,1,2,3], start=[0,0,0,0], end=[9223372036854775807,96,9223372036854775807,9223372036854775807], step=[1,1,1,1])
        output_module_130 = self.module_130(input=output_module_125, dim=[0,1,2,3], start=[0,96,0,0], end=[9223372036854775807,192,9223372036854775807,9223372036854775807], step=[1,1,1,1])
        output_module_131 = self.module_131(output_module_130)
        output_module_131 = self.module_132({'self': output_module_131})
        output_module_131 = self.module_133(output_module_131)
        output_module_131 = self.module_134({'self': output_module_131})
        output_module_135 = self.module_135(output_module_131)
        output_module_135 = self.module_136({'self': output_module_135})
        output_module_135 = self.module_137(output_module_135)
        output_module_135 = self.module_138({'self': output_module_135})
        output_module_129 = self.module_139(dim=1, tensors=[output_module_129,output_module_130,output_module_131,output_module_135])
        output_module_129 = self.module_140(output_module_129)
        output_module_129 = self.module_141({'self': output_module_129})
        output_module_142 = self.module_142(output_module_129)
        output_module_142 = self.module_143({'self': output_module_142})
        output_module_142 = self.module_144(dim=1, tensors=[output_module_142,output_module_112])
        output_module_142 = self.module_145(output_module_142)
        output_module_142 = self.module_146({'self': output_module_142})
        output_module_147 = self.module_147(input=output_module_142, dim=[0,1,2,3], start=[0,0,0,0], end=[9223372036854775807,192,9223372036854775807,9223372036854775807], step=[1,1,1,1])
        output_module_148 = self.module_148(input=output_module_142, dim=[0,1,2,3], start=[0,192,0,0], end=[9223372036854775807,384,9223372036854775807,9223372036854775807], step=[1,1,1,1])
        output_module_149 = self.module_149(output_module_148)
        output_module_149 = self.module_150({'self': output_module_149})
        output_module_149 = self.module_151(output_module_149)
        output_module_149 = self.module_152({'self': output_module_149})
        output_module_153 = self.module_153(output_module_149)
        output_module_153 = self.module_154({'self': output_module_153})
        output_module_153 = self.module_155(output_module_153)
        output_module_153 = self.module_156({'self': output_module_153})
        output_module_147 = self.module_157(dim=1, tensors=[output_module_147,output_module_148,output_module_149,output_module_153])
        output_module_147 = self.module_158(output_module_147)
        output_module_147 = self.module_159({'self': output_module_147})
        output_module_160 = self.module_160(output_module_147)
        output_module_160 = self.module_161({'self': output_module_160})
        output_module_160 = self.module_162(dim=1, tensors=[output_module_160,output_module_105])
        output_module_160 = self.module_163(output_module_160)
        output_module_160 = self.module_164({'self': output_module_160})
        output_module_165 = self.module_165(input=output_module_160, dim=[0,1,2,3], start=[0,0,0,0], end=[9223372036854775807,288,9223372036854775807,9223372036854775807], step=[1,1,1,1])
        output_module_166 = self.module_166(input=output_module_160, dim=[0,1,2,3], start=[0,288,0,0], end=[9223372036854775807,576,9223372036854775807,9223372036854775807], step=[1,1,1,1])
        output_module_167 = self.module_167(output_module_166)
        output_module_167 = self.module_168({'self': output_module_167})
        output_module_167 = self.module_169(output_module_167)
        output_module_167 = self.module_170({'self': output_module_167})
        output_module_171 = self.module_171(output_module_167)
        output_module_171 = self.module_172({'self': output_module_171})
        output_module_171 = self.module_173(output_module_171)
        output_module_171 = self.module_174({'self': output_module_171})
        output_module_165 = self.module_175(dim=1, tensors=[output_module_165,output_module_166,output_module_167,output_module_171])
        output_module_165 = self.module_176(output_module_165)
        output_module_165 = self.module_177({'self': output_module_165})
        output_module_178 = self.module_178(output_module_129)
        output_module_178 = self.module_179({'self': output_module_178})
        output_module_178 = self.module_180(output_module_178)
        output_module_178 = self.module_181({'self': output_module_178})
        output_module_178 = self.module_182(output_module_178)
        output_module_183 = self.module_183(output_module_129)
        output_module_183 = self.module_184({'self': output_module_183})
        output_module_183 = self.module_185(output_module_183)
        output_module_183 = self.module_186({'self': output_module_183})
        output_module_183 = self.module_187(output_module_183)
        output_module_178 = self.module_188(dim=1, tensors=[output_module_178,output_module_183])
        output_module_189 = self.module_189(output_module_147)
        output_module_189 = self.module_190({'self': output_module_189})
        output_module_189 = self.module_191(output_module_189)
        output_module_189 = self.module_192({'self': output_module_189})
        output_module_189 = self.module_193(output_module_189)
        output_module_194 = self.module_194(output_module_147)
        output_module_194 = self.module_195({'self': output_module_194})
        output_module_194 = self.module_196(output_module_194)
        output_module_194 = self.module_197({'self': output_module_194})
        output_module_194 = self.module_198(output_module_194)
        output_module_189 = self.module_199(dim=1, tensors=[output_module_189,output_module_194])
        output_module_200 = self.module_200(output_module_165)
        output_module_200 = self.module_201({'self': output_module_200})
        output_module_200 = self.module_202(output_module_200)
        output_module_200 = self.module_203({'self': output_module_200})
        output_module_200 = self.module_204(output_module_200)
        output_module_205 = self.module_205(output_module_165)
        output_module_205 = self.module_206({'self': output_module_205})
        output_module_205 = self.module_207(output_module_205)
        output_module_205 = self.module_208({'self': output_module_205})
        output_module_205 = self.module_209(output_module_205)
        output_module_200 = self.module_210(dim=1, tensors=[output_module_200,output_module_205])
        output_module_178 = self.module_211(input=output_module_178)
        output_module_189 = self.module_212(input=output_module_189)
        output_module_200 = self.module_213(input=output_module_200)
        return (output_module_178,output_module_189,output_module_200)
